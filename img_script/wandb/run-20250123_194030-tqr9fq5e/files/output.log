> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(35)<module>()
-> train_loader, val_loader, test_loader, num_negatives, num_positives = create_dataloaders(
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(36)<module>()
-> dataset_dir = "/home/dvegaa/DELFOS/delfos_final_dataset/delfos_images_split",
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(37)<module>()
-> dataset_class=DelfosDataset,
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(38)<module>()
-> transform_train=transform_train,
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(39)<module>()
-> transform_test=transform_test,
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(40)<module>()
-> batch_size=args.batch_size
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(35)<module>()
-> train_loader, val_loader, test_loader, num_negatives, num_positives = create_dataloaders(
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(45)<module>()
-> device = "cuda" if torch.cuda.is_available() else "cpu"
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(46)<module>()
-> model = ImageModel(args)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(47)<module>()
-> model = model.build_model()
initialize_weights...
/media/SSD4/dvegaa/DELFOS/DELFOS/img_script/get_img_model.py:64: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(checkpoint_path, map_location=self.device)
Checkpoint loaded successfully (excluding proj_head).
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(48)<module>()
-> print(model)
MedViT(
  (stem): Sequential(
    (0): ConvBNReLU(
      (conv): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (1): ConvBNReLU(
      (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (2): ConvBNReLU(
      (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (3): ConvBNReLU(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
  )
  (features): Sequential(
    (0): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.000)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.005)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.011)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.016)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.021)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.026)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=192, out_features=192, bias=True)
        (k): Linear(in_features=192, out_features=192, bias=True)
        (v): Linear(in_features=192, out_features=192, bias=True)
        (proj): Linear(in_features=192, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(16,), stride=(16,), padding=(0,))
        (norm): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.024)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
        (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.008)
      (norm2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=512, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=512, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (7): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.037)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.042)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.047)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.053)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=384, out_features=384, bias=True)
        (k): Linear(in_features=384, out_features=384, bias=True)
        (v): Linear(in_features=384, out_features=384, bias=True)
        (proj): Linear(in_features=384, out_features=384, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(4,), stride=(4,), padding=(0,))
        (norm): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.043)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.014)
      (norm2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1024, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=1024, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (12): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.063)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.068)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.074)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (15): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.079)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (16): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=384, out_features=384, bias=True)
        (k): Linear(in_features=384, out_features=384, bias=True)
        (v): Linear(in_features=384, out_features=384, bias=True)
        (proj): Linear(in_features=384, out_features=384, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(4,), stride=(4,), padding=(0,))
        (norm): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.063)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.021)
      (norm2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1024, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=1024, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (17): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(512, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.089)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(768, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)
          (4): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2304, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=2304, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2304, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (18): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.095)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(768, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)
          (4): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2304, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=2304, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2304, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (19): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=768, out_features=768, bias=True)
        (k): Linear(in_features=768, out_features=768, bias=True)
        (v): Linear(in_features=768, out_features=768, bias=True)
        (proj): Linear(in_features=768, out_features=768, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.075)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.025)
      (norm2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048, bias=False)
          (4): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2048, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=2048, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (proj_head): Sequential(
    (0): Linear(in_features=1024, out_features=1, bias=True)
  )
)
MedViT(
  (stem): Sequential(
    (0): ConvBNReLU(
      (conv): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (1): ConvBNReLU(
      (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (2): ConvBNReLU(
      (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (3): ConvBNReLU(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
  )
  (features): Sequential(
    (0): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.000)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.005)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3, bias=False)
        (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.011)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(96, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(288, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=288, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.016)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.021)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=6, bias=False)
        (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.026)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(192, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=576, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=192, out_features=192, bias=True)
        (k): Linear(in_features=192, out_features=192, bias=True)
        (v): Linear(in_features=192, out_features=192, bias=True)
        (proj): Linear(in_features=192, out_features=192, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(16,), stride=(16,), padding=(0,))
        (norm): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.024)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
        (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.008)
      (norm2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=512, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=512, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (7): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.037)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.042)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.047)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.053)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=384, out_features=384, bias=True)
        (k): Linear(in_features=384, out_features=384, bias=True)
        (v): Linear(in_features=384, out_features=384, bias=True)
        (proj): Linear(in_features=384, out_features=384, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(4,), stride=(4,), padding=(0,))
        (norm): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.043)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.014)
      (norm2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1024, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=1024, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (12): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.063)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.068)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.074)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (15): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
        (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.079)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1152, bias=False)
          (4): BatchNorm2d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1152, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=1152, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (16): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=384, out_features=384, bias=True)
        (k): Linear(in_features=384, out_features=384, bias=True)
        (v): Linear(in_features=384, out_features=384, bias=True)
        (proj): Linear(in_features=384, out_features=384, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
        (sr): AvgPool1d(kernel_size=(4,), stride=(4,), padding=(0,))
        (norm): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.063)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.021)
      (norm2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=1024, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=1024, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (17): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): AvgPool2d(kernel_size=(2, 2), stride=2, padding=0)
        (conv): Conv2d(512, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.089)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(768, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)
          (4): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2304, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=2304, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2304, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (18): ECB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (attention_path_dropout): DropPath(drop_prob=0.095)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(768, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)
          (4): BatchNorm2d(2304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2304, out_features=3, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=3, out_features=2304, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2304, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (19): LTB(
      (patch_embed): PatchEmbed(
        (avgpool): Identity()
        (conv): Identity()
        (norm): Identity()
      )
      (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (e_mhsa): E_MHSA(
        (q): Linear(in_features=768, out_features=768, bias=True)
        (k): Linear(in_features=768, out_features=768, bias=True)
        (v): Linear(in_features=768, out_features=768, bias=True)
        (proj): Linear(in_features=768, out_features=768, bias=True)
        (attn_drop): Dropout(p=0.3, inplace=False)
        (proj_drop): Dropout(p=0.3, inplace=False)
      )
      (mhsa_path_dropout): DropPath(drop_prob=0.075)
      (projection): PatchEmbed(
        (avgpool): Identity()
        (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (mhca): MHCA(
        (group_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
        (projection): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (mhca_path_dropout): DropPath(drop_prob=0.025)
      (norm2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): LocalityFeedForward(
        (conv): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (3): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048, bias=False)
          (4): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): h_swish(
            (sigmoid): h_sigmoid(
              (relu): ReLU6(inplace=True)
            )
          )
          (6): SELayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=2048, out_features=2, bias=True)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=2, out_features=2048, bias=True)
              (3): h_sigmoid(
                (relu): ReLU6(inplace=True)
              )
            )
          )
          (7): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (proj_head): Sequential(
    (0): Linear(in_features=1024, out_features=1, bias=True)
  )
)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(51)<module>()
-> model = model.to(device)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(54)<module>()
-> loss_weights = torch.tensor([num_negatives / num_positives], dtype=torch.float32).to(device)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(55)<module>()
-> loss_weights = loss_weights*args.loss_factor
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(56)<module>()
-> criterion = nn.BCEWithLogitsLoss(pos_weight=loss_weights)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(57)<module>()
-> print(loss_weights)
tensor([2.6385], device='cuda:0')
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(60)<module>()
-> optimizer = optim.AdamW(model.parameters(), lr=args.lr, betas=(0.9, 0.999), weight_decay=args.weight_decay)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(63)<module>()
-> save_path = os.path.join("image_checkpoints", exp_name, "best_model.pth")
3678
697
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(64)<module>()
-> os.makedirs(os.path.dirname(save_path), exist_ok=True)
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(67)<module>()
-> best_f1 = 0.0
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(69)<module>()
-> for epoch in tqdm(range(args.num_epochs)):
Epoch 1/50: 100%|█████████████████████████████████████████████████████████████████████████████████| 547/547 [04:05<00:00,  2.23batch/s, Batch Loss=1.2598]
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(70)<module>()
-> print(f"Epoch [{epoch+1}/{args.num_epochs}]")
Epoch [1/50]
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(73)<module>()
-> train_one_epoch(model, train_loader, criterion, optimizer, epoch, device, args)
Validationing: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 198/198 [00:54<00:00,  3.62batch/s]
Epoch [1/50], Average Loss: 1.1351
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(76)<module>()
-> best_f1 = evaluate(model, val_loader, criterion, device, args, mode="Validation", save_path=save_path, best_f1=best_f1)
Epoch 2/50:  42%|██████████████████████████████████▎                                              | 232/547 [01:44<02:21,  2.23batch/s, Batch Loss=1.4822]
Validation Loss: 0.7925
Validation Metrics: Accuracy: 0.6559, Precision: 0.3014, Recall: 0.6818, F1: 0.4180
New best model saved with F1 score: 0.4180
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(69)<module>()
-> for epoch in tqdm(range(args.num_epochs)):
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(70)<module>()
-> print(f"Epoch [{epoch+1}/{args.num_epochs}]")
Epoch [2/50]
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(73)<module>()
-> train_one_epoch(model, train_loader, criterion, optimizer, epoch, device, args)
  2%|██▎                                                                                                                | 1/50 [08:01<6:33:27, 481.78s/it]
KeyboardInterrupt
> /media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py(73)<module>()
-> train_one_epoch(model, train_loader, criterion, optimizer, epoch, device, args)
Traceback (most recent call last):
  File "/media/SSD4/dvegaa/DELFOS/DELFOS/img_script/main_img.py", line 73, in <module>
    train_one_epoch(model, train_loader, criterion, optimizer, epoch, device, args)
  File "/home/dvegaa/anaconda3/envs/medvit/lib/python3.11/bdb.py", line 96, in trace_dispatch
    return self.dispatch_exception(frame, arg)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/dvegaa/anaconda3/envs/medvit/lib/python3.11/bdb.py", line 176, in dispatch_exception
    if self.quitting: raise BdbQuit
                      ^^^^^^^^^^^^^
bdb.BdbQuit
